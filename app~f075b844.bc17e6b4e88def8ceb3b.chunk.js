(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{0:function(o,t,e){e("GAND"),e("GmYv"),o.exports=e("b9nV")},BEPO:function(o){o.exports=JSON.parse('{"a":false,"b":false}')},app:function(o,t,e){"use strict";e.r(t),e.d(t,"App",(function(){return l}));var n=e("aurelia-framework"),i=e("aurelia-event-aggregator"),a=e("twK/"),p=function(o,t,e,n){var i,a=arguments.length,p=a<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,e):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)p=Reflect.decorate(o,t,e,n);else for(var r=o.length-1;r>=0;r--)(i=o[r])&&(p=(a<3?i(p):a>3?i(t,e,p):i(t,e))||p);return a>3&&p&&Object.defineProperty(t,e,p),p},r=function(o,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(o,t)},l=function(){function o(){this.copyIcon=a.a,this.instance=1,this.environment="prod",this.workload="myapp",this.message="msg",this.region="westus",this.selectedResourceType="rg"}return Object.defineProperty(o.prototype,"resourceName",{get:function(){var o=this.selectedResourceType+"-"+this.workload+"-"+this.environment+"-"+this.region;return this.instance>0&&(o+="-"+String(this.instance).padStart(3,"0")),o},enumerable:!1,configurable:!0}),p([Object(n.j)("selectedResourceType","environment","region","workload","instance"),r("design:type",String),r("design:paramtypes",[])],o.prototype,"resourceName",null),o=p([Object(n.l)(i.a),r("design:paramtypes",[])],o)}()},"app.html":function(o,t,e){o.exports='<template> <require from="bootstrap/dist/css/bootstrap.css"></require> <require from="./resourcetype-list"></require> <require from="./workload"></require> <require from="./region"></require> <div class="container"> <h1>Azure Resource Namer</h1> <p>A simple tool to help you name your Azure resources.</p> <form> <div class="container"> <div class="row"> <div class="col"> <resourcetype-list resource.two-way="selectedResourceType"></resourcetype-list> </div> <div class="col"> <workload message.two-way="workload"></workload> </div> <div class="col"> <label for="environment" class="form-label">Environment</label> <input class="form-control" type="text" id="environment" value.bind="environment"/> </div> <div class="col"> <region name.two-way="region"></region> </div> <div class="col"> <label for="instance" class="form-label">Instance</label> <input class="form-control" type="number" id="instance" value.bind="instance"/> </div> </div> </div> </form> <h2>Resource name</h2> <div class="container"> <div class="input-group mb-3"> <input type="text" class="form-control" value.one-way="resourceName" aria-multiline="false" readonly="" spellcheck="false" tabindex="-1" aria-readonly="true" title="resource name"> <span class="input-group-text" id="basic-addon2"> <button type="button" class="btn-clipboard" title="Copy to clipboard" onclick=\'alert("not implemented yet")\'> <font-awesome-icon icon.bind="copyIcon"></font-awesome-icon> </button> </span> </div> </div> </div> </template> '},main:function(o,t,e){"use strict";e.d(t,"configure",(function(){return i}));var n=e("BEPO");e("70NS");function i(o){o.use.standardConfiguration().plugin("aurelia-fontawesome").feature("resources/index"),o.use.developmentLogging(n.a?"debug":"warn"),n.b&&o.use.plugin("aurelia-testing"),o.start().then((function(){return o.setRoot("app")}))}},region:function(o,t,e){"use strict";e.r(t),e.d(t,"region",(function(){return p}));var n=e("aurelia-framework"),i=function(o,t,e,n){var i,a=arguments.length,p=a<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,e):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)p=Reflect.decorate(o,t,e,n);else for(var r=o.length-1;r>=0;r--)(i=o[r])&&(p=(a<3?i(p):a>3?i(t,e,p):i(t,e))||p);return a>3&&p&&Object.defineProperty(t,e,p),p},a=function(o,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(o,t)},p=function(){function o(){}return i([Object(n.h)({defaultBindingMode:n.i.twoWay}),a("design:type",Object)],o.prototype,"name",void 0),o}()},"region.html":function(o,t){o.exports='<template> <label for="region" class="form-label">Region</label> <select class="form-control" id="region" value.bind="name"> <optgroup label="Africa"> <option value="southafricanorth" title="Johannesburg">South Africa North</option> <option value="southafricawest" title="Cape Town">South Africa West</option> </optgroup> <optgroup label="Asia Pacific"> <option value="australiacentral" title="Canberra">Australia Central</option> <option value="australiacentral2" title="Canberra">Australia Central 2</option> <option value="australiaeast" title="New South Wales">Australia East</option> <option value="australiasoutheast" title="Victoria">Australia Southeast</option> <option value="centralindia" title="Pune">Central India</option> <option value="eastasia" title="Hong Kong">East Asia</option> <option value="japaneast" title="Tokyo, Saitama">Japan East</option> <option value="japanwest" title="Osaka">Japan West</option> <option value="jioindiacentral" title="Nagpur">Jio India Central</option> <option value="jioindiawest" title="Jamnagar">Jio India West</option> <option value="koreacentral" title="Seoul">Korea Central</option> <option value="koreasouth" title="Busan">Korea South</option> <option value="southeastasia" title="Singapore">Southeast Asia</option> <option value="southindia" title="Chennai">South India</option> <option value="westindia" title="Mumbai">West India</option> </optgroup> <optgroup label="Canada"> <option value="canadacentral" title="Toronto">Canada Central</option> <option value="canadaeast" title="Quebec">Canada East</option> </optgroup> <optgroup label="Europe"> <option value="francecentral" title="Paris">France Central</option> <option value="francesouth" title="Marseille">France South</option> <option value="germanynorth" title="Berlin">Germany North</option> <option value="germanywestcentral" title="Frankfurt">Germany West Central</option> <option value="northeurope" title="Ireland">North Europe</option> <option value="norwayeast" title="Norway">Norway East</option> <option value="norwaywest" title="Norway">Norway West</option> <option value="qatarcentral" title="Doha">Qatar Central</option> <option value="swedencentral" title="Gï¿½vle">Sweden Central</option> <option value="swedensouth" title="Malmo">Sweden South</option> <option value="switzerlandnorth" title="Zurich">Switzerland North</option> <option value="switzerlandwest" title="Geneva">Switzerland West</option> <option value="uksouth" title="London">UK South</option> <option value="ukwest" title="Cardiff">UK West</option> <option value="westeurope" title="Netherlands">West Europe</option> </optgroup> <optgroup label="Middle East"> <option value="uaecentral" title="Abu Dhabi">UAE Central</option> <option value="uaenorth" title="Dubai">UAE North</option> </optgroup> <optgroup label="South America"> <option value="brazilsouth" title="Sao Paulo State">Brazil South</option> <option value="brazilsoutheast" title="Rio">Brazil Southeast</option> </optgroup> <optgroup label="US"> <option value="centralus" title="Iowa">Central US</option> <option value="centraluseuap" title="">Central US EUAP</option> <option value="eastus" title="Virginia">East US</option> <option value="eastus2" title="Virginia">East US 2</option> <option value="eastus2euap" title="">East US 2 EUAP</option> <option value="northcentralus" title="Illinois">North Central US</option> <option value="southcentralus" title="Texas">South Central US</option> <option value="westcentralus" title="Wyoming">West Central US</option> <option value="westus" title="California">West US</option> <option value="westus2" title="Washington">West US 2</option> <option value="westus3" title="Phoenix">West US 3</option> </optgroup> </select> </template> '},"resources/index":function(o,t,e){"use strict";function n(o){}e.r(t),e.d(t,"configure",(function(){return n}))},"resourcetype-list":function(o,t,e){"use strict";e.r(t),e.d(t,"ResourcetypeList",(function(){return p}));var n=e("aurelia-framework"),i=function(o,t,e,n){var i,a=arguments.length,p=a<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,e):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)p=Reflect.decorate(o,t,e,n);else for(var r=o.length-1;r>=0;r--)(i=o[r])&&(p=(a<3?i(p):a>3?i(t,e,p):i(t,e))||p);return a>3&&p&&Object.defineProperty(t,e,p),p},a=function(o,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(o,t)},p=function(){function o(){}return i([Object(n.h)({defaultBindingMode:n.i.twoWay}),a("design:type",String)],o.prototype,"resource",void 0),o}()},"resourcetype-list.html":function(o,t){o.exports='<template> <label for="resourceType" class="form-label">Resource type</label> <select id="resourceType" class="form-control" value.bind="resource"> <optgroup label="AI and Machine Learning"> <option value="srch">Azure Cognitive Search</option> <option value="cog">Azure Cognitive Services</option> <option value="mlw">Azure Machine Learning workspace</option> </optgroup> <optgroup label="Analytics and IoT"> <option value="as">Azure Analysis Services server</option> <option value="dbw">Azure Databricks workspace</option> <option value="asa">Azure Stream Analytics</option> <option value="dec">Azure Data Explorer cluster</option> <option value="dedb">Azure Data Explorer cluster database</option> <option value="adf">Azure Data Factory</option> <option value="dls">Data Lake Store account</option> <option value="dla">Data Lake Analytics account</option> <option value="evhns">Event Hubs namespace</option> <option value="evh">Event hub</option> <option value="evgd">Event Grid domain</option> <option value="evgs">Event Grid subscriptions</option> <option value="evgt">Event Grid topic</option> <option value="hadoop">HDInsight - Hadoop cluster</option> <option value="hbase">HDInsight - HBase cluster</option> <option value="kafka">HDInsight - Kafka cluster</option> <option value="spark">HDInsight - Spark cluster</option> <option value="storm">HDInsight - Storm cluster</option> <option value="mls">HDInsight - ML Services cluster</option> <option value="iot">IoT hub</option> <option value="provs">Provisioning services</option> <option value="pcert">Provisioning services certificate</option> <option value="pbi">Power BI Embedded</option> <option value="tsi">Time Series Insights environment</option> </optgroup> <optgroup label="Azure Virtual Desktop"> <option value="vdpool">Virtual desktop host pool</option> <option value="vdag">Virtual desktop application group</option> <option value="vdws">Virtual desktop workspace</option> </optgroup> <optgroup label="Compute and Web"> <option value="ase">App Service environment</option> <option value="plan">App Service plan</option> <option value="avail">Availability set</option> <option value="arcs">Azure Arc enabled server</option> <option value="arck">Azure Arc enabled Kubernetes cluster</option> <option value="cld">Cloud service</option> <option value="des">Disk encryption set</option> <option value="func">Function app</option> <option value="gal">Gallery</option> <option value="osdisk">Managed disk (OS)</option> <option value="disk">Managed disk (data)</option> <option value="ntf">Notification Hubs</option> <option value="ntfns">Notification Hubs namespace</option> <option value="snap">Snapshot</option> <option value="stapp">Static web app</option> <option value="vm">Virtual machine</option> <option value="vmss">Virtual machine scale set</option> <option value="stvm">VM storage account</option> <option value="app">Web app</option> </optgroup> <optgroup label="Containers"> <option value="aks">AKS cluster</option> <option value="cr">Container registry</option> <option value="ci">Container instance</option> <option value="sf">Service Fabric cluster</option> </optgroup> <optgroup label="Databases"> <option value="cosmos">Azure Cosmos DB database</option> <option value="redis">Azure Cache for Redis instance</option> <option value="sql">Azure SQL Database server</option> <option value="sqldb">Azure SQL database</option> <option value="syn">Azure Synapse Analytics</option> <option value="synw">Azure Synapse Analytics Workspaces</option> <option value="syndp">Azure Synapse Analytics SQL Dedicated Pool</option> <option value="synsp">Azure Synapse Analytics Spark Pool</option> <option value="mysql">MySQL database</option> <option value="psql">PostgreSQL database</option> <option value="sqlstrdb">SQL Server Stretch Database</option> <option value="sqlmi">SQL Managed Instance</option> </optgroup> <optgroup label="Developer tools"> <option value="appcs">App Configuration store</option> <option value="sigr">SignalR</option> </optgroup> <optgroup label="General"> <option value="apim">API management service instance</option> <option value="id">Managed Identity</option> <option value="mg">Management group</option> <option value="policy">Policy definition</option> <option value="rg">Resource group</option> </optgroup> <optgroup label="Integration"> <option value="ia">Integration account</option> <option value="logic">Logic apps</option> <option value="sb">Service Bus</option> <option value="sbq">Service Bus queue</option> <option value="sbt">Service Bus topic</option> </optgroup> <optgroup label="Networking"> <option value="agw">Application gateway</option> <option value="asg">Application security group (ASG)</option> <option value="bas">Bastion</option> <option value="cdnp">CDN profile</option> <option value="cdne">CDN endpoint</option> <option value="con">Connections</option> <option value="dnsz">DNS</option> <option value="pdnsz">DNS zone</option> <option value="afw">Firewall</option> <option value="afwp">Firewall policy</option> <option value="erc">ExpressRoute circuit</option> <option value="fd">Front Door instance</option> <option value="fdfp">Front Door firewall policy</option> <option value="lbi">Load balancer (internal)</option> <option value="lbe">Load balancer (external)</option> <option value="rule">Load balancer rule</option> <option value="lgw">Local network gateway</option> <option value="ng">NAT gateway</option> <option value="nic">Network interface (NIC)</option> <option value="nsg">Network security group (NSG)</option> <option value="nsgsr">Network security group (NSG) security rules</option> <option value="nw">Network Watcher</option> <option value="pl">Private Link</option> <option value="pip">Public IP address</option> <option value="ippre">Public IP address prefix</option> <option value="rf">Route filter</option> <option value="rt">Route table</option> <option value="se">Service endpoint</option> <option value="traf">Traffic Manager profile</option> <option value="udr">User defined route (UDR)</option> <option value="vnet">Virtual network</option> <option value="peer">Virtual network peering</option> <option value="snet">Virtual network subnet</option> <option value="vwan">Virtual WAN</option> <option value="vpng">VPN Gateway</option> <option value="vcn">VPN connection</option> <option value="vst">VPN site</option> <option value="vgw">Virtual network gateway</option> <option value="waf">Web Application Firewall (WAF) policy</option> <option value="wafrg">Web Application Firewall (WAF) policy rule group</option> </optgroup> <optgroup label="Management and governance"> <option value="aa">Automation account</option> <option value="appi">Application Insights</option> <option value="ag">Azure Monitor action group</option> <option value="pview">Azure Purview instance</option> <option value="bp">Blueprint</option> <option value="bpa">Blueprint assignment</option> <option value="kv">Key vault</option> <option value="log">Log Analytics workspace</option> </optgroup> <optgroup label="Migration"> <option value="migr">Azure Migrate project</option> <option value="dms">Database Migration Service instance</option> <option value="rsv">Recovery Services vault</option> </optgroup> <optgroup label="Storage"> <option value="st">Storage account</option> <option value="ssimp">Azure StorSimple</option> </optgroup> <optgroup label="Deprecated product names"> <option value="sqldw">Azure SQL Data Warehouse</option> </optgroup> </select> </template> '},workload:function(o,t,e){"use strict";e.r(t),e.d(t,"Workload",(function(){return p}));var n=e("aurelia-framework"),i=function(o,t,e,n){var i,a=arguments.length,p=a<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,e):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)p=Reflect.decorate(o,t,e,n);else for(var r=o.length-1;r>=0;r--)(i=o[r])&&(p=(a<3?i(p):a>3?i(t,e,p):i(t,e))||p);return a>3&&p&&Object.defineProperty(t,e,p),p},a=function(o,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(o,t)},p=function(){function o(){}return i([Object(n.h)({defaultBindingMode:n.i.twoWay}),a("design:type",Object)],o.prototype,"message",void 0),o}()},"workload.html":function(o,t){o.exports='<template> <label for="workload" class="form-label">Workload</label> <input class="form-control" id="workload" type="text" value.bind="message"/> </template> '}},[[0,1,3,4,2,7,6,9,8,5]]]);
//# sourceMappingURL=app~f075b844.bc17e6b4e88def8ceb3b.bundle.map